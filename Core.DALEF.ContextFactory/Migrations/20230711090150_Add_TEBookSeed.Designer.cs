// <auto-generated />
using System;
using Core.DALEF.ContextFactory;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core.DALEF.ContextFactory.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230711090150_Add_TEBookSeed")]
    partial class Add_TEBookSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.DAL.Models.SYSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeValue")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DecimalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("LevelValue")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("StringValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserChangedID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserCreatedID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SYSetting");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d81229a0-cf63-46c0-87f4-59db2ee37256"),
                            Active = true,
                            DateChanged = new DateTime(1800, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1800, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DecimalValue = 0m,
                            Level = 1,
                            Module = "SY",
                            Name = "DataSchemaVersion",
                            StringValue = "SchemaVersion.V1_0_0",
                            Type = "System.String",
                            UserChangedID = new Guid("89b87015-b687-4cad-a553-f911cf2e6fcf"),
                            UserCreatedID = new Guid("89b87015-b687-4cad-a553-f911cf2e6fcf")
                        });
                });

            modelBuilder.Entity("IPSTemplate.Dal.Models.Identity.TEIdentityRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", "Identity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fcb01c05-f06b-4a3e-b08d-34540ac91b22"),
                            ConcurrencyStamp = "04aaa4c4-015c-47bd-84e3-f660c83eec34",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = new Guid("ed57c3a7-d092-4c10-b608-23d66a63c261"),
                            ConcurrencyStamp = "47febb0e-091b-49aa-9ba0-ecf94e815713",
                            Name = "Member",
                            NormalizedName = "MEMBER"
                        });
                });

            modelBuilder.Entity("IPSTemplate.Dal.Models.Identity.TEIdentityUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ResetTokenExpireUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("User", "Identity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4455c52-cd74-4230-b647-30c717f4d164"),
                            AccessFailedCount = 0,
                            Active = true,
                            ConcurrencyStamp = "04aaa4c4-015c-47bd-84e3-f660c83eec34",
                            Email = "admin@ipstemplate.org",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Administrator",
                            NormalizedEmail = "ADMIN@IPSTEMPLATE.ORG",
                            NormalizedUserName = "ADMINISTRATOR",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fd6491f3-30a3-43fc-b5c6-5a2481a14f37",
                            TwoFactorEnabled = false,
                            UserName = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("ddcb65c5-3170-48be-bc9a-7bc89f741286"),
                            AccessFailedCount = 0,
                            Active = true,
                            ConcurrencyStamp = "47febb0e-091b-49aa-9ba0-ecf94e815713",
                            Email = "member@ipstemplate.org",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Member",
                            NormalizedEmail = "MEMBER@IPSTEMPLATE.ORG",
                            NormalizedUserName = "MEMBER",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d29bc0b2-5bfb-4da2-8af0-43b06dbfec4b",
                            TwoFactorEnabled = false,
                            UserName = "Member"
                        });
                });

            modelBuilder.Entity("IPSTemplate.Dal.Models.TEAuthor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("BirthYear")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeathYear")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("UserChangedID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserCreatedID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TEAuthor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4bd02036-6a0f-4526-9a3d-ac479296e4c8"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Chris",
                            LastName = "Barez-Brown",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("6dd90191-35f9-4bb6-9a6e-48d3875caa9f"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "David",
                            LastName = "Cotton",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d35d1b53-cd0e-4b42-9819-98e21fa6d2af"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Robert C.",
                            LastName = "Martin",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("cb20cbcd-d000-4842-95f9-7a13fdedc908"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Brian",
                            LastName = "Tracy",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("9847031e-413b-4641-8e30-542996ec4483"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John C.",
                            LastName = "Maxwell",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5bf8e384-ad9d-4382-b984-7cb6762135b7"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Charles C.",
                            LastName = "Manz",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("43110a64-ff40-4c5b-941f-ba5459e08ff6"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Kare",
                            LastName = "Anderson",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("ed071b6f-4d39-45f5-b656-879c8d1cd4be"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "dr. Dennis E.",
                            LastName = "Hensley",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("8c52345c-b12c-476d-8457-e7a413ee0c85"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Beverly",
                            LastName = "Sallee",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("de0034e8-61f6-4cfb-bb00-550e18e35813"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Vince",
                            LastName = "Poscente",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1e854d42-5abc-4cb8-8612-3604f1d6338f"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Maxwell",
                            LastName = "Maltz",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a3b46595-20c6-456b-9a58-6137f8974ed9"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Skip ",
                            LastName = " Ross",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("6befae2b-6824-4da0-adc1-eb8c5a11e5ae"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Carole C. ",
                            LastName = "Carlson",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("3e0e45b6-f023-4f67-8a5e-73e94eb6f873"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mamie ",
                            LastName = " McCallough",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("3e1d4bd1-a459-4f34-9b44-f6df55f8d981"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Lothar J.",
                            LastName = " Seiwert",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("ae11c234-4cd2-4e62-a21a-1eb31d250fb3"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ann ",
                            LastName = " McGee-Cooper",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("668b0be2-e639-409e-a37c-efd37cb9baa5"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Prof.Ben C. ",
                            LastName = " Fletcher",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1d0bff2e-770e-4879-9ed5-ef86122b139d"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "dr. Karen ",
                            LastName = " Pine",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f562de09-54ff-4819-b154-bb7e753109a0"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "dr. Danny",
                            LastName = " Penman",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c11f04c1-4f2f-4652-bf72-efc5a2b27642"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John C.",
                            LastName = " Maxwell",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("2f644084-5a69-43cb-9ca5-23394463baf7"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jim",
                            LastName = " Clemmer",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("64b8e52e-0365-47e2-805c-a173583b847b"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Simona",
                            LastName = " Sternad Zabukovšek",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("fd68b897-49ff-43a8-9ff8-4d2bdef78f91"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Polona",
                            LastName = " Tominc",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("7ea4a0e0-9b31-4ad7-b245-6fc340ddfe2e"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Tjaša",
                            LastName = " Štrukelj",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("880d61ba-fd72-42fe-a96e-83093461228c"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Samo",
                            LastName = " Bobek",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("8908c397-5f49-454b-83c8-5b6d93bacab8"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dr.Marilee",
                            LastName = " Adams",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1c828dbc-f44b-41c8-b29e-1412d0fcb749"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Benjamin",
                            LastName = " Levy",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("b69672d6-5c2c-4f60-b0e7-12d8a763e4b4"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Travis",
                            LastName = " Bradberry",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("6be06e09-e930-490a-9382-11ef9785e516"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jean",
                            LastName = " Greaves",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("22ec1668-ef8e-4c98-afcf-92c3703d278c"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Allan",
                            LastName = " Pease",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5ce3747a-ab03-49b8-8282-17c73bafd79b"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Barbara",
                            LastName = " Pease",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("377329f3-1449-44ec-96ed-963991ae4144"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "dr.Bill",
                            LastName = " Quain",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("2d2e421b-4148-4a1d-8635-ee84c339c74e"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Pat",
                            LastName = " Mesiti",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("497a44de-28f3-40ed-b3b2-0352bbf537f3"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Pat",
                            LastName = " Riley",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("b102a246-c9d0-4124-8dd5-63792e079d6c"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Florence",
                            LastName = " Littauer",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("34f6ed97-96f7-44df-a576-5a0e0f22fb7b"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Marita",
                            LastName = " Littauer",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5a8fa816-1db3-4281-9575-eb16a6b1b85a"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "George",
                            LastName = " Shinn",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("20d9a362-297c-457d-a3a1-87c6790ddf27"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ken",
                            LastName = " Blanchard",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c583f679-ee3f-4b8d-899c-4fc4ba9473ed"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mark",
                            LastName = " Miller",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("03f05554-2fa6-4f05-9b1f-07b1e93dc815"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Steve",
                            LastName = " Chandler",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("84cb355b-9f39-4afd-8176-3db1fcbd9e26"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sam",
                            LastName = " Beckford",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("679cff41-cbd8-4a24-b245-be846df6d70b"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Burke",
                            LastName = " Hedges",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("72f8409a-310f-4dd4-8997-13c290f9450b"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Joseph",
                            LastName = " Sugarman",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("dabbbe73-6176-4d55-bcb2-ce799985ac93"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "dr.Bill",
                            LastName = " Quain",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("9937be0c-d710-42e1-84d4-08a51417d67b"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Todd",
                            LastName = " Duncan",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d27c0fa7-23be-495a-aa2e-dba7a0d88be9"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John C.",
                            LastName = " Maxwell",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("cf9c8d7d-b7ba-4cca-996f-67c06710af99"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ken",
                            LastName = " Blanchard",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("718c2ca7-97ae-4059-9ed2-faa12a0f1eb8"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sheldon",
                            LastName = " Bowles",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a4c01ce6-a52e-4c4a-86be-726cf0798b87"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Roger",
                            LastName = " Fritz",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("IPSTemplate.Dal.Models.TEBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BookIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GenreID")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PageAmount")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("UserChangedID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserCreatedID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GenreID");

                    b.ToTable("TEBook");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9a27d8d9-b415-489b-bd35-dc1730200dbf"),
                            Active = true,
                            BookIndex = 100,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Life and work are intrinsically linked. They are not separate; they are one. If we want to live an extraordinary life, we have to make our work equally extraordinary. When your work resonates with purpose, you jump out of bed every morning, excited by the possibilities the day holds for you. Everything else in your life seems to have a glow about it, and you exude much more personal shine. My aim in writing this book is to help you feel like that every day. To help you make your work work for you. To feel truly free. Reading Free! will remind you that you are fantastic and have the ability to do amazing things; show you that work is your slave, not the other way round; help you make work your ticket to an extraordinary future; and put you in the driving seat and show you a route to freedom.",
                            GenreID = new Guid("e74ec0d0-4f62-424a-a876-1ed6815e9de5"),
                            Name = "Free! Love Your Work, Love Your Life",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("febca16c-9fce-4d75-b7d1-177bfa143db1"),
                            Active = true,
                            BookIndex = 200,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Even bad code can function. But if code isn&rsquo;t clean, it can bring a development organization to its knees. Every year, countless hours and significant resources are lost because of poorly written code. But it doesn&rsquo;t have to be that way. Noted software expert Robert C. Martin presents a revolutionary paradigm with  Clean Code: A Handbook of Agile Software Craftsmanship . Martin has teamed up with his colleagues from Object Mentor to distill their best agile practice of cleaning code &ldquo;on the fly&rdquo; into a book that will instill within you the values of a software craftsman and make you a better programmer&mdash;but only if you work at it. What kind of work will you be doing? You&rsquo;ll be reading code&mdash;lots of code. And you will be challenged to think about what&rsquo;s right about that code, and what&rsquo;s wrong with it. More importantly, you will be challenged to reassess your professional values and your commitment to your craft.   Clean Code  is divided into three parts. The first describes the principles, patterns, and practices of writing clean code. The second part consists of several case studies of increasing complexity. Each case study is an exercise in cleaning up code&mdash;of transforming a code base that has some problems into one that is sound and efficient. The third part is the payoff: a single chapter containing a list of heuristics and &ldquo;smells&rdquo; gathered while creating the case studies. The result is a knowledge base that describes the way we think when we write, read, and clean code. Readers will come away from this book understanding  How to tell the difference between good and bad code How to write good code and how to transform bad code into good code How to create good names, good functions, good objects, and good classes How to format code for maximum readability How to implement complete error handling without obscuring code logic How to unit test and practice test-driven development This book is a must for any developer, software engineer, project manager, team lead, or systems analyst with an interest in producing better code.",
                            GenreID = new Guid("e74ec0d0-4f62-424a-a876-1ed6815e9de5"),
                            Name = "Clean Code: A Handbook of Agile Software Craftsmanship",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("IPSTemplate.Dal.Models.TEBookAuthor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AuthorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("UserChangedID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserCreatedID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AuthorID");

                    b.HasIndex("BookID");

                    b.ToTable("TEBookAuthor");
                });

            modelBuilder.Entity("IPSTemplate.Dal.Models.TEBookCopy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BookCopyNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("BookID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PublishedYear")
                        .HasColumnType("int");

                    b.Property<Guid?>("PublisherID")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QRCodeUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("UserChangedID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserCreatedID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BookID");

                    b.HasIndex("PublisherID");

                    b.ToTable("TEBookCopy");
                });

            modelBuilder.Entity("IPSTemplate.Dal.Models.TEBorrowings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("BookCopyID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndBorrowing")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("StartBorrowing")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserChangedID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserCreatedID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BookCopyID");

                    b.HasIndex("UserID");

                    b.ToTable("TEBorrowings");
                });

            modelBuilder.Entity("IPSTemplate.Dal.Models.TEEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Attribute1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("UserChangedID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserCreatedID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TEEntity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c041f416-41e6-419e-b832-7e67c6c35fda"),
                            Active = true,
                            Attribute1 = "This is a seed record.",
                            DateChanged = new DateTime(1800, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1800, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserChangedID = new Guid("89b87015-b687-4cad-a553-f911cf2e6fcf"),
                            UserCreatedID = new Guid("89b87015-b687-4cad-a553-f911cf2e6fcf")
                        },
                        new
                        {
                            Id = new Guid("50366dd5-49e5-4cc4-a06d-5ec6f4c0805e"),
                            Active = true,
                            Attribute1 = "This is a dummy record.",
                            DateChanged = new DateTime(1800, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1800, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserChangedID = new Guid("89b87015-b687-4cad-a553-f911cf2e6fcf"),
                            UserCreatedID = new Guid("89b87015-b687-4cad-a553-f911cf2e6fcf")
                        });
                });

            modelBuilder.Entity("IPSTemplate.Dal.Models.TEGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("UserChangedID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserCreatedID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TEGenre");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e74ec0d0-4f62-424a-a876-1ed6815e9de5"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "IT",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("IPSTemplate.Dal.Models.TEPublisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("UserChangedID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserCreatedID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TEPublisher");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1f855264-06ea-45d1-a83d-75ace379a617"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Penguin UK",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e5122ef3-0fe3-41bc-9d9d-b2bad13b8e94"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pearson Education, Limited",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("920ff788-b598-4f89-aa66-beeec3c0e64e"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Prentice Hall",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d6c559d6-373d-4a53-9a46-f5635a4e42f9"),
                            Active = true,
                            DateChanged = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Založba Tuma",
                            UserChangedID = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCreatedID = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", "Identity");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("a4455c52-cd74-4230-b647-30c717f4d164"),
                            RoleId = new Guid("fcb01c05-f06b-4a3e-b08d-34540ac91b22")
                        },
                        new
                        {
                            UserId = new Guid("ddcb65c5-3170-48be-bc9a-7bc89f741286"),
                            RoleId = new Guid("ed57c3a7-d092-4c10-b608-23d66a63c261")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserToken", "Identity");
                });

            modelBuilder.Entity("IPSTemplate.Dal.Models.TEBook", b =>
                {
                    b.HasOne("IPSTemplate.Dal.Models.TEGenre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("IPSTemplate.Dal.Models.TEBookAuthor", b =>
                {
                    b.HasOne("IPSTemplate.Dal.Models.TEAuthor", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IPSTemplate.Dal.Models.TEBook", "Book")
                        .WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("IPSTemplate.Dal.Models.TEBookCopy", b =>
                {
                    b.HasOne("IPSTemplate.Dal.Models.TEBook", "Book")
                        .WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IPSTemplate.Dal.Models.TEPublisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("IPSTemplate.Dal.Models.TEBorrowings", b =>
                {
                    b.HasOne("IPSTemplate.Dal.Models.TEBookCopy", "BookCopy")
                        .WithMany()
                        .HasForeignKey("BookCopyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IPSTemplate.Dal.Models.Identity.TEIdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BookCopy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("IPSTemplate.Dal.Models.Identity.TEIdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("IPSTemplate.Dal.Models.Identity.TEIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("IPSTemplate.Dal.Models.Identity.TEIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("IPSTemplate.Dal.Models.Identity.TEIdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IPSTemplate.Dal.Models.Identity.TEIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("IPSTemplate.Dal.Models.Identity.TEIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
