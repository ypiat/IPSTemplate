@namespace IPSTemplate.UI.Blazor.Features.Borrowings

@using Core.Library.Base
@using Csla.Core
@using IPSTemplate.BusinessLibrary.BO.Borrowings
@using Telerik.Blazor
@using Telerik.Blazor.Components
@using IPSTemplate.BusinessLibrary.StandardCollections
@using IPSTemplate.Dal.Models
@using Telerik.DataSource


@inherits GridView<BorrowingsGrid,
                   TEBorrowingsInfo,
                   TEBorrowingsGridInfo,
                   TEBorrowingsRL,
                   TEBorrowings>


<AuthorizeView Roles="Administrator" Context="Auth">
    <IPSPageTop Title="Tekoče izposoje">
        <ActionsContent>
            <IPSButton Color="Color.Secondary" OnClick=NavigateToHistory>Zgodovina izposoj</IPSButton>
        </ActionsContent>
    </IPSPageTop>
    <IPSGrid Id="BorrowingsGrid" ShowHeader=true
         OnRead=ReadData TItem=TEBorrowingsInfo
             Context="borrowing" Sortable @ref=_ref>
        <GridColumns>
            <IPSGridColumn Id="Id" Field=@nameof(TEBorrowingsInfo.Id) Visible=false />
            <IPSGridColumn Id="BookCopyNumber" Field=@nameof(TEBorrowingsInfo.BookCopyBookCopyNumber) Width="110px" Filterable=false />
            <IPSGridColumn Id="BookName" Field=@nameof(TEBorrowingsInfo.BookCopyBookName) Width="480px"/> 
            <IPSGridColumn Id="User" Field=@nameof(TEBorrowingsInfo.UserShowFullName) />
            <IPSGridColumn Id="StartBorrowing" Field=@nameof(TEBorrowingsInfo.StartBorrowing) Filterable=false Width="200px" />
            <IPSGridColumn Id="EndBorrowing" Field=@nameof(TEBorrowingsInfo.EndBorrowing) Filterable=false Width="200px" />
            <IPSGridColumn Id="Status" Field=@nameof(TEBorrowingsInfo.Status) Filterable=false Width="110px">
                <Template>
                    @{
                        var borrowings = (TEBorrowingsInfo)context;
                        var color = GetColor(borrowings);
                        var borrowing = (TEBorrowingsInfo)context;
                        <IPSBadge Color=@color>@borrowing.Status</IPSBadge>
                    }
                </Template>
               
            </IPSGridColumn>
            <IPSGridCommandColumn Width="200px">
                @{
                    var borrowing = (TEBorrowingsInfo)context;
                    @if (!borrowing.IsReturned)
                    {
                        <IPSButton Size=ButtonSize.Small Color="Color.Success" OnClick=@(() => HandleReturn.InvokeAsync((TEBorrowingsInfo)context))>Vrni</IPSButton>
                        <IPSButton Size=ButtonSize.Small Color="Color.Warning" OnClick=@(() => HandleExtend.InvokeAsync((TEBorrowingsInfo)context))>Podaljšaj</IPSButton>
                    } 
                }     
            </IPSGridCommandColumn>
        </GridColumns>
    </IPSGrid>
</AuthorizeView>

<AuthorizeView Roles="Member" Context="Auth">
    <IPSPageTop Title="Tekoče izposoje" />
    <IPSGrid Id="BorrowingsGrid" ShowHeader=true
             OnRead=ReadUserData TItem=TEBorrowingsInfo
             Context="borrowing" Sortable @ref=_ref>
        <GridColumns>
            <IPSGridColumn Id="Id" Field=@nameof(TEBorrowingsInfo.Id) Visible=false />
            <IPSGridColumn Id="BookCopyNumber" Field=@nameof(TEBorrowingsInfo.BookCopyBookCopyNumber) Width="110px" Filterable=false />
            <IPSGridColumn Id="BookName" Field=@nameof(TEBorrowingsInfo.BookCopyBookName) Width="600px" />
            <IPSGridColumn Id="StartBorrowing" Field=@nameof(TEBorrowingsInfo.StartBorrowing) Filterable=false Width="200px" />
            <IPSGridColumn Id="EndBorrowing" Field=@nameof(TEBorrowingsInfo.EndBorrowing) Filterable=false Width="200px" />
            <IPSGridColumn Id="Status" Field=@nameof(TEBorrowingsInfo.Status) Filterable=false Width="100px">
                <Template>
                    @{
                        var borrowing = (TEBorrowingsInfo)context;
                        <IPSBadge Color="Color.Warning">@borrowing.Status</IPSBadge>
                    }
                </Template>
            </IPSGridColumn>
            <IPSGridCommandColumn Width="200px">
                @{
                    var borrowing = (TEBorrowingsInfo)context;
                    @if (!borrowing.IsReturned)
                    {
                        <IPSButton Size=ButtonSize.Small Color="Color.Success" OnClick=@(() => HandleReturn.InvokeAsync((TEBorrowingsInfo)context))>Vrni</IPSButton>
                        <IPSButton Size=ButtonSize.Small Color="Color.Warning" OnClick=@(() => HandleExtend.InvokeAsync((TEBorrowingsInfo)context))>Podaljšaj</IPSButton>
                    }
                }
            </IPSGridCommandColumn>
        </GridColumns>
    </IPSGrid>
    <br />
    <br />
    <br />
    <IPSPageTop Title="Zgodovina izposoj" />
    <IPSGrid Id="BorrowingsGrid" ShowHeader=true
             OnRead=ReadUserHistoryData TItem=TEBorrowingsInfo
             Context="borrowing" Sortable @ref=_refHistory>
        <GridColumns>
            <IPSGridColumn Id="Id" Field=@nameof(TEBorrowingsInfo.Id) Visible=false />
            <IPSGridColumn Id="BookCopyNumber" Field=@nameof(TEBorrowingsInfo.BookCopyBookCopyNumber) Width="110px"  Filterable=false/>
            <IPSGridColumn Id="BookName" Field=@nameof(TEBorrowingsInfo.BookCopyBookName) Width="600px"/>     
            <IPSGridColumn Id="StartBorrowing" Field=@nameof(TEBorrowingsInfo.StartBorrowing) Filterable=false Width="200px" />
            <IPSGridColumn Id="EndBorrowing" Field=@nameof(TEBorrowingsInfo.EndBorrowing) Filterable=false Width="200px" />
            <IPSGridColumn Id="Status" Field=@nameof(TEBorrowingsInfo.Status) Filterable=false Width="200px">
                <Template>
                    @{
                        var borrowing = (TEBorrowingsInfo)context;
                        <IPSBadge Color="Color.Success">@borrowing.Status</IPSBadge>
                    }
                </Template>
            </IPSGridColumn> 
        </GridColumns>
    </IPSGrid>
</AuthorizeView>
