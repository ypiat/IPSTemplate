@page "/bookcopy/edit/{ItemId?}"

@using BusinessLibrary.BO.BookCopy
@using Dal.Models
@using IPSTemplate.BusinessLibrary.BO.Author;
@using IPSTemplate.BusinessLibrary.BO.Publisher;


@using IPSTemplate.UI.Blazor.Features.Publisher

@inherits EditView<TEBookCopyBO, TEBookCopy>

@if (ViewModel?.Model is null)
{
    <IPSLoader />
    return;
}

@if (Error is not null)
{
    @Error
    return;
}


<IPSForm Model=ViewModel OnSaved=@(() => ItemSaved.InvokeAsync())>
    <FormFields>
        <IPSFormField Property=@ViewModel.GetProperty(() => ViewModel.Model.BookCopyNumber) />
        <IPSComboBox @ref=cbxPublisher Label="Založba"  TItem=TEPublisherInfo TValue=Guid?
                     TextField=@nameof(TEPublisherInfo.Name)
                     ValueField=@nameof(TEPublisherInfo.Id)
                     Property=@ViewModel.GetProperty(() => ViewModel.Model.PublisherID)
                     OnRead="GetPublishers" />
        <IPSButton Icon=Icon.Add Color="Color.Secondary" OnClick="(() => windowVisible = true)">Dodaj založbo</IPSButton>

        <IPSFormField Property=@ViewModel.GetProperty(() => ViewModel.Model.PublishedYear) />
    </FormFields>
    <FormButtons>
        <IPSFormSaveButton />
    </FormButtons>
</IPSForm>


<IPSWindow Title="Dodaj novo založbo"
           Size="WindowSize.Small"
           ConfirmCloseWhen=@(() => _publisherEditView.ViewModel.Model.IsDirty)
           @bind-Visible=@windowVisible>
    <WindowContent>
        <PublisherEdit ItemSaved=CloseEditView @ref=_publisherEditView />
    </WindowContent>
</IPSWindow>



