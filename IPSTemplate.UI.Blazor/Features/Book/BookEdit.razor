@using BusinessLibrary.BO.Book
@using Dal.Models
@using IPSTemplate.BusinessLibrary.BO.Author;
@using IPSTemplate.BusinessLibrary.BO.Genre;


@using IPSTemplate.UI.Blazor.Features.Author
@using IPSTemplate.UI.Blazor.Features.Genre

@inherits EditView<TEBookBO, TEBook>

@if (ViewModel?.Model is null)
{
    <IPSLoader />
    return;
}

@if (Error is not null)
{
    @Error
    return;
}


<IPSForm Model=ViewModel OnSaved=@(() => ItemSaved.InvokeAsync()) >
    <FormFields>
        <IPSFormField Property=@ViewModel.GetProperty(() => ViewModel.Model.Name) />
        <IPSMultiSelect Property=@ViewModel.GetProperty(() => ViewModel.Model.AuthorIds) OnRead="GetAuthors"
                        TItem="TEAuthorInfo" TValue="Guid" TextField="ShowAs" ValueField="Id"
                        @ref=_authorRef/>
        <IPSButton Icon=Icon.Add Color="Color.Secondary" OnClick="(() => windowAuthorVisible = true)">Dodaj avtorja</IPSButton>
        
        <IPSRow>
            <IPSComboBox  TItem=TEGenreInfo TValue=Guid?
                         TextField=@nameof(TEGenreInfo.Name)
                         ValueField=@nameof(TEGenreInfo.Id)
                         Property=@ViewModel.GetProperty(() => ViewModel.Model.GenreID)
                         OnRead="GetGenres" ColumnWidth="6" @ref=_genreRef />
            <IPSDropDownList Data=@TELanguages.OrderedUserFriendlyNameMap
                         ValueField=@nameof(KeyValuePair<string, string>.Key)
                         TextField=@nameof(KeyValuePair<string, string>.Value)
                         Property=@ViewModel.GetProperty(() => ViewModel.Model.Language) ColumnWidth="6" 
                         Filterable=true/>
            
        </IPSRow>
        <IPSButton Icon=Icon.Add Color="Color.Secondary" OnClick="(() => windowGenreVisible = true)">Dodaj žanr</IPSButton>
        <IPSRow>
            <IPSNumericTextBox Property=@ViewModel.GetProperty(() => ViewModel.Model.PageAmount) ColumnWidth="6" />
            @if(IsAddNew)
            {
                <IPSNumericTextBox Property=@ViewModel.GetProperty(() => ViewModel.Model.BookIndex) ColumnWidth="6" />
            }

        </IPSRow>
        <IPSTextArea Property=@ViewModel.GetProperty(() => ViewModel.Model.Description)></IPSTextArea>
    </FormFields>
    <FormButtons>
        <IPSFormSaveButton />
    </FormButtons>
</IPSForm>

<IPSWindow Title="Dodaj novega avtorja"
           Size="WindowSize.Medium"
           ConfirmCloseWhen=@(() => _authorEditView.ViewModel.Model.IsDirty)
@bind-Visible=@windowAuthorVisible>
    <WindowContent>
        <AuthorEdit ItemSaved=CloseEditAuthorView @ref=_authorEditView />
    </WindowContent>
</IPSWindow>

<IPSWindow Title="Dodaj žanr"
           Size="WindowSize.Small"
           ConfirmCloseWhen=@(() => _genreEditView.ViewModel.Model.IsDirty)
@bind-Visible=@windowGenreVisible>
    <WindowContent>
        <GenreEdit ItemSaved=CloseEditGenreView @ref=_genreEditView />
    </WindowContent>
</IPSWindow>





