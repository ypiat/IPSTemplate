@page "/book"
@using IPSTemplate.BusinessLibrary.BO.Book;
@using IPSTemplate.BusinessLibrary.BO.BookCopy;
@using IPSTemplate.UI.Blazor.Features.BookCopy;
@using IPSTemplate.UI.Blazor.Features.Borrowings;



<IPSPageTop Title="Knjige">
    <ActionsContent>
        <IPSButton Icon=Icon.Add Color="Color.Primary" OnClick=@(() => OpenEditView(null))>Dodaj knjigo</IPSButton>
    </ActionsContent>
</IPSPageTop>

<BooksGrid EditClicked=OpenEditView AddClicked=OpenAddView  @ref=_bookGrid />

<IPSWindow Title=@_editViewTitle
           Size="WindowSize.Medium"
           ConfirmCloseWhen=@(() => _editView.ViewModel.Model.IsDirty)
@bind-Visible=@windowEditVisible>
    <WindowContent>
        <BookEdit ItemId=@_selectedItemId IsAddNew=_isAddNew ItemSaved=CloseEditView @ref=_editView />
    </WindowContent>
</IPSWindow>


<IPSWindow Title=@_addCopyViewTitle
           Size="WindowSize.Medium"
           ConfirmCloseWhen=@(() => _addCopyView.ViewModel.Model.IsDirty)
@bind-Visible=@windowAddCopyVisible>
    <WindowContent>
        <BookCopyAdd Book=@_selectedBook ItemId=@_selectedItemId  ItemSaved=CloseAddCopyView @ref=_addCopyView />
    </WindowContent>
</IPSWindow>



@code{
    string? _selectedItemId;
    TEBookInfo _selectedBook;
    Guid _selectedBookCopyId;
    int _bookCopyNumber;
    string? _editViewTitle;
    string? _addCopyViewTitle;
    bool windowEditVisible;
    bool windowAddCopyVisible;
    bool windowBorrowVisible;
    bool _isAddNew;
    BooksGrid _bookGrid = default!;
    BookEdit _editView = default!;
    BookCopyAdd _addCopyView = default!;


    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; } = default!;

    [Inject] private NavigationManager NavigationManager { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;

        if (user.Identity?.IsAuthenticated == false || user.IsInRole("Member"))
        {
            NavigationManager.NavigateTo("/");
        }
    }

    protected void OpenEditView(TEBookInfo? selectedItem)
    {
        if (selectedItem is null)
        {
            _editViewTitle = "Dodaj novo knjigo";
            _selectedItemId = null;
            _isAddNew = true;
        }
        else
        {
            _editViewTitle = $"Uredi knjigo - {selectedItem.Name}";
            _selectedItemId = selectedItem.Id.ToString();
            _isAddNew = false;
        }

        windowEditVisible = true;
    }

    async Task CloseEditView()
    {
        await Task.Delay(1000);
        windowEditVisible = false;
        _selectedItemId = null;
        _bookGrid.RebindBookGrid();
    }



    protected void OpenAddView(TEBookInfo selectedItem)
    {
        _addCopyViewTitle = $"Dodaj kopijo knjige - {selectedItem.Name}";
        _selectedBook = selectedItem;
        _selectedItemId = null;

        windowAddCopyVisible = true;
    }


    async Task CloseAddCopyView()
    {
        await Task.Delay(1000);
        windowAddCopyVisible = false;
        _selectedItemId = null;
        _bookGrid.RebindBookGrid();
    }
}
