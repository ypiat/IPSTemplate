@page "/book"
@using IPSTemplate.BusinessLibrary.BO.Book;
@using IPSTemplate.BusinessLibrary.BO.BookCopy;
@using IPSTemplate.UI.Blazor.Features.BookCopy;
@using IPSTemplate.UI.Blazor.Features.Borrowings;

<IPSPageTop Title="Knjige">
    <ActionsContent>
        <IPSButton Icon=Icon.Add Color="Color.Primary" OnClick=@(() => OpenEditView(null))>Dodaj knjigo</IPSButton>
        
    </ActionsContent>
</IPSPageTop>

<BooksGrid EditClicked=OpenEditView AddClicked=OpenAddView CopyEditClicked=OpenEditCopyView BorrowClicked=OpenBorrowView @ref=_grid />


<IPSWindow Title=@_editViewTitle
           Size="WindowSize.Medium"
           ConfirmCloseWhen=@(() => _editView.ViewModel.Model.IsDirty)
@bind-Visible=@windowEditVisible>
    <WindowContent>
        <BookEdit ItemId=@_selectedItemId ItemSaved=CloseEditView @ref=_editView />
    </WindowContent>
</IPSWindow>

<IPSWindow Title=@_editCopyViewTitle
           Size="WindowSize.Medium"
           ConfirmCloseWhen=@(() => _editCopyView.ViewModel.Model.IsDirty)
           @bind-Visible=@windowEditCopyVisible>
    <WindowContent>
        <BookCopyEdit BookId=@_selectedBookId ItemId=@_selectedItemId BookCopyNumber=@_bookCopyNumber ItemSaved=CloseEditCopyView @ref=_editCopyView />
    </WindowContent>
</IPSWindow>

<IPSWindow Title=@_borrowViewTitle
           Size="WindowSize.Medium"
           ConfirmCloseWhen=@(() => _borrowView.ViewModel.Model.IsDirty)
           @bind-Visible=@windowBorrowVisible>
    <WindowContent>
        <BorrowingsEdit BookCopyId=@_selectedBookCopyId ItemSaved=CloseBorrowView @ref=_borrowView />
    </WindowContent>
</IPSWindow>


@code{
    string? _selectedItemId;
    Guid _selectedBookId;
    Guid _selectedBookCopyId;
    int _bookCopyNumber;
    string? _editViewTitle;
    string? _editCopyViewTitle;
    string _borrowViewTitle;
    bool windowEditVisible;
    bool windowEditCopyVisible;
    bool windowBorrowVisible;
    BooksGrid _grid = default!;
    BookEdit _editView = default!;
    BookCopyEdit _editCopyView = default!;
    BorrowingsEdit _borrowView = default!;



    protected void OpenEditView(TEBookInfo? selectedItem)
    {
        if (selectedItem is null)
        {
            _editViewTitle = "Dodaj novo knjigo";
            _selectedItemId = null;
        }
        else
        {
            _editViewTitle = $"Uredi knjigo - {selectedItem.Name}";
            _selectedItemId = selectedItem.Id.ToString();
        }

        windowEditVisible = true;
    }

    async Task CloseEditView()
    {
        await Task.Delay(1000);
        windowEditVisible = false;
        _selectedItemId = null;
        _grid.RebindBookGrid();
    }



    protected void OpenAddView(TEBookInfo selectedItem)
    {
        _editCopyViewTitle = $"Dodaj kopijo knjige - {selectedItem.Name}";
        _selectedBookId = selectedItem.Id;
        _bookCopyNumber = selectedItem.NewBookCopyNumber;
        _selectedItemId = null;

        windowEditCopyVisible = true;
    }

    protected void OpenEditCopyView (TEBookCopyInfo selectedItem)
    {
        _editCopyViewTitle = $"Uredi kopijo knjige - {selectedItem.BookName}";
        _selectedBookId = selectedItem.BookID;
        _bookCopyNumber = selectedItem.BookCopyNumber;
        _selectedItemId = selectedItem.Id.ToString();

        windowEditCopyVisible = true;
    }

    async Task CloseEditCopyView()
    {
        await Task.Delay(1000);
        windowEditCopyVisible = false;
        _selectedItemId = null;
        _grid.RebindBookGrid();
    }

    protected void OpenBorrowView(TEBookCopyInfo selectedItem)
    {
        _borrowViewTitle = $"Izposoj za knjigo - {selectedItem.BookName}";
        _selectedBookCopyId = selectedItem.Id;

        windowBorrowVisible = true;
    }
    
    async Task CloseBorrowView()
    {
        await Task.Delay(1000);
        windowBorrowVisible = false;
        _selectedItemId = null;
        _grid.RebindBookGrid();
    }
}
